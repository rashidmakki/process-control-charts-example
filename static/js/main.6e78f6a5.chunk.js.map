{"version":3,"sources":["components/form/form.js","components/example/example.js","components/hoc/hoc.js","components/pchart/pchart.js","components/npchart/npchart.js","components/cchart/cchart.js","components/uchart/uchart.js","App.js","reportWebVitals.js","index.js"],"names":["Form","onChange","handleSubmit","className","align","style","type","placeholder","name","htmlFor","aria-label","defaultValue","value","onClick","styleById","strokeDasharray","strokeWidth","default","DashedLine","series","lineGenerator","xScale","yScale","map","id","data","color","d","x","y","fill","stroke","Example","curve","colorScheme","lclPlot","uclPlot","clPlot","sampleData","margin","top","right","bottom","left","min","max","stacked","reverse","yFormat","axisBottom","orient","tickSize","tickPadding","tickRotation","legend","legendOffset","legendPosition","axisLeft","colors","pointSize","pointColor","theme","pointBorderWidth","pointBorderColor","from","pointLabelYOffset","useMesh","layers","legends","anchor","direction","justify","translateX","translateY","itemsSpacing","itemDirection","itemWidth","itemHeight","itemOpacity","symbolSize","symbolShape","symbolBorderColor","effects","on","itemBackground","withComponent","props","WrappedComponent","state","prevProps","prevState","selectedChart","this","sampleValue","sampleSize","dataDetails","pChart","setState","npChart","cChart","uChart","console","log","React","Component","TableData","ucl","cl","lcl","samplesOutOfControl","undefined","index","App","event","target","array","split","item","push","Number","size","showChart","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8SAyEeA,EAvEJ,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,SAASC,EAAgB,EAAhBA,aACpB,OACG,sBAAKC,UAAU,iBAAf,UACA,oBAAIC,MAAM,SAASD,UAAU,iBAA7B,qCACM,sBAAKA,UAAU,WAAYE,MAAO,CAAC,OAAS,SAA5C,UACA,qBAAKF,UAAU,SAAf,SACR,sBAAKA,UAAU,qBAAf,UACA,uBAAOG,KAAK,OAAOH,UAAU,eAAeI,YAAY,8BAA+BC,KAAK,cAAcP,SAAUA,IACpH,uBAAOQ,QAAQ,gBAAf,4CAIS,qBAAKN,UAAU,WAAf,SACT,sBAAKA,UAAU,qBAAf,UACA,uBAAOG,KAAK,OAAOH,UAAU,eAAgBI,YAAY,KAAMC,KAAK,aAAaP,SAAUA,IAC3F,uBAAOQ,QAAQ,gBAAf,8BAIS,qBAAKN,UAAU,WAAf,SACT,yBAAQK,KAAK,gBAAgBP,SAAUA,EAAUE,UAAU,eAAeE,MAAO,CAAC,OAAS,OAAQK,aAAW,yBAA9G,UACA,wBAAQC,aAAa,mBAArB,8BACA,wBAAQC,MAAM,SAAd,oBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,SAAd,yBAIA,qBAAKT,UAAU,gBAAf,SACA,yBAAQK,KAAK,QAAQP,SAAUA,EAAUE,UAAU,oBAAoBO,aAAW,yBAAlF,UACA,wBAAQC,aAAa,mBAArB,+BACA,wBAAQC,MAAM,QAAd,mBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,aAAd,wBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,aAAd,6BAIS,qBAAKT,UAAU,gBAAf,SACT,yBAAQK,KAAK,cAAcP,SAAUA,EAAUE,UAAU,oBAAoBO,aAAW,yBAAxF,UACA,wBAAQC,aAAa,mBAArB,sCACA,wBAAQC,MAAM,OAAd,kBACA,wBAAQA,MAAM,aAAd,wBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,OAAd,uBAKS,qBAAKT,UAAU,SAAf,SACA,wBAAQG,KAAK,SAASH,UAAU,kBAAkBU,QAASX,EAA3D,6B,SCvDNY,G,OAAY,CACd,sBAAuB,CACnBC,gBAAiB,QACjBC,YAAa,GAEjB,sBAAsB,CAClBD,gBAAiB,QACjBC,YAAa,GAEjB,gBAAgB,CACZD,gBAAiB,QACjBC,YAAa,GAEjBC,QAAS,CACLD,YAAa,KAGfE,EAAa,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,OAAQC,EAAoC,EAApCA,cAAeC,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,OACjD,OAAOH,EAAOI,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,MAAb,OACd,sBAEIC,EAAGP,EACCK,EAAKF,KAAI,SAAAI,GAAC,MAAK,CACXC,EAAGP,EAAOM,EAAEF,KAAKG,GACjBC,EAAGP,EAAOK,EAAEF,KAAKI,QAGzBC,KAAK,OACLC,OAAQL,EACRrB,MAAOS,EAAUU,IAAOV,EAAUG,SAT7BO,OAwFFQ,EA3EC,SAAC,GAA8B,IAA5BP,EAA2B,EAA3BA,KAAKQ,EAAsB,EAAtBA,MAAMC,EAAgB,EAAhBA,YAC3B,OACG,qBAAK/B,UAAU,UAAf,SACF,cAAC,IAAD,CAEKsB,KAAM,CACC,CAAC,GAAK,sBAAsB,MAAQ,SAASA,KAAKA,EAAKU,SACvD,CAAC,GAAK,sBAAsB,MAAQ,MAAMV,KAAKA,EAAKW,SACpD,CAAC,GAAK,gBAAgB,MAAQ,QAAQX,KAAKA,EAAKY,QAChD,CAAC,GAAK,gCAAgC,MAAQ,SAASZ,KAAKA,EAAKa,aAEzEC,OAAQ,CAAEC,IAAK,GAAIC,MAAO,IAAKC,OAAQ,GAAIC,KAAM,IACjDtB,OAAQ,CAAEf,KAAM,QAASsC,IAAK,EAAGC,IAAK,QACtCvB,OAAQ,CAAEhB,KAAM,SAAUsC,IAAK,OAAQC,IAAK,OAAQC,SAAS,EAAOC,SAAS,GAC7EC,QAAQ,QACRf,MAAOA,EACPgB,WAAY,CACRC,OAAQ,SACRC,SAAU,EACVC,YAAa,EACbC,aAAc,EACdC,OAAQ,gBACRC,aAAc,GACdC,eAAgB,UAEpBC,SAAU,CACNP,OAAQ,OACRC,SAAU,EACVC,YAAa,EACbC,aAAc,EACdC,OAAQ,gCACRC,cAAe,GACfC,eAAgB,UAEpBE,OAAQ,CAAC,OAASxB,GAClByB,UAAW,EACXC,WAAY,CAAEC,MAAO,cACrBC,iBAAkB,EAClBC,iBAAkB,CAAEC,KAAM,cAC1BC,mBAAoB,GACpBC,SAAS,EACTC,OAAQ,CAAC,OAAQ,UAAW,OAAOjD,EAAY,QAAS,YAAa,SAAU,SAAU,OAAQ,WACjGkD,QAAS,CACL,CACIC,OAAQ,MACRC,UAAW,MACXC,SAAS,EACTC,WAAY,EACZC,YAAa,GACbC,aAAc,IACdC,cAAe,gBACfC,UAAW,IACXC,WAAY,GACZC,YAAa,IACbC,WAAY,GACZC,YAAa,SACbC,kBAAmB,oBACnBC,QAAS,CACL,CACIC,GAAI,QACJ9E,MAAO,CACH+E,eAAgB,qBAChBN,YAAa,Y,QCrC1BO,EA9DK,SAACC,GAAD,OAAS,SAACC,GAC5B,yDACE,WAAYD,GAAO,IAAD,8BAChB,cAAMA,IACDE,MAAM,CACT/D,KAAK,IAHS,EADpB,sDAOE,SAAmBgE,EAAUC,GAC3B,GAAGD,EAAUE,gBAAgBC,KAAKN,MAAMK,eAAgBF,EAAUI,cAAcD,KAAKN,MAAMO,aAAaJ,EAAUK,aAAaF,KAAKN,MAAMQ,YAAYL,EAAUxD,QAAQ2D,KAAKN,MAAMrD,MACjL,OAAO,KAEP,IACI8D,EADJ,EAA6CH,KAAKN,MAA3CQ,EAAP,EAAOA,WAAWD,EAAlB,EAAkBA,YAAYF,EAA9B,EAA8BA,cAE9B,MAAmB,WAAhBA,GACDI,EAAaC,YAAOH,EAAYC,GACzBF,KAAKK,SAAS,CAACxE,KAAKsE,KACJ,YAAhBJ,GACPI,EAAaG,YAAQL,EAAYC,GAC1BF,KAAKK,SAAS,CAACxE,KAAKsE,KACJ,WAAhBJ,GACPI,EAAaI,YAAON,GACbD,KAAKK,SAAS,CAACxE,KAAKsE,KACJ,WAAhBJ,GACPI,EAAaK,YAAOP,EAAYC,GAChCO,QAAQC,IAAIP,GACLH,KAAKK,SAAS,CAACxE,KAAKsE,KAEpB,OA3Bf,+BAgCE,WACE,IACIA,EADJ,EAA6CH,KAAKN,MAA3CQ,EAAP,EAAOA,WAAWD,EAAlB,EAAkBA,YAAYF,EAA9B,EAA8BA,cAE9B,MAAmB,WAAhBA,GACDI,EAAaC,YAAOH,EAAYC,GACzBF,KAAKK,SAAS,CAACxE,KAAKsE,KACJ,YAAhBJ,GACPI,EAAaG,YAAQL,EAAYC,GAC1BF,KAAKK,SAAS,CAACxE,KAAKsE,KACJ,WAAhBJ,GACPI,EAAaI,YAAON,GACbD,KAAKK,SAAS,CAACxE,KAAKsE,MAE3BA,EAAaK,YAAOP,EAAYC,GACzBF,KAAKK,SAAS,CAACxE,KAAKsE,OA9CjC,oBAkDA,WACE,MAA0BH,KAAKN,MAAxBrD,EAAP,EAAOA,MAAMC,EAAb,EAAaA,YACb,OACE,gCACA,cAAC,EAAD,CAAST,KAAMmE,KAAKJ,MAAM/D,KAAMQ,MAAOA,EAAOC,YAAaA,IAC3D,cAACqD,EAAD,aAAkB9D,KAAMmE,KAAKJ,MAAM/D,MAAUmE,KAAKN,eAvDtD,GAAkCiB,IAAMC,aCFpCC,EAAU,SAACnB,GAChB,IAAO1D,EAAK0D,EAAL1D,EAAEC,EAAGyD,EAAHzD,EACT,OACa,+BACA,mCAAK,mCAAMD,EAAN,UACL,mCAAK,mCAAMC,EAAN,cA6EJwD,OAxEF,SAACC,GACb,IAAO7D,EAAoB6D,EAApB7D,KAAKkE,EAAeL,EAAfK,cACNrD,EAAWb,EAAKa,WACtB,OACQ,sBAAKnC,UAAU,YAAf,UACA,oBAAIC,MAAM,SAASD,UAAU,sBAA7B,SAAoDwF,IAEpD,sBAAKxF,UAAU,MAAME,MAAO,CAAC,OAAS,SAAtC,UAEC,qBAAKF,UAAU,iBAAf,SACA,qBAAKA,UAAU,yBAAf,SACA,sBAAKA,UAAU,mCAAf,UACA,oBAAIA,UAAU,aAAd,iCACA,oBAAGA,UAAU,wBAAb,cAAuCsB,EAAKiF,cAK5C,qBAAKvG,UAAU,iBAAf,SACA,qBAAKA,UAAU,wBAAf,SACA,sBAAKA,UAAU,kCAAf,UACA,oBAAIA,UAAU,aAAd,2BACA,mBAAGA,UAAU,wBAAb,SAAsCsB,EAAKkF,YAK3C,qBAAKxG,UAAU,iBAAf,SACA,qBAAKA,UAAU,yBAAf,SACA,sBAAKA,UAAU,kCAAf,UACA,oBAAIA,UAAU,aAAd,kCACA,mBAAGA,UAAU,YAAb,SAA0BsB,EAAKmF,aAK/B,qBAAKzG,UAAU,iBAAf,SACA,qBAAKA,UAAU,yBAAf,SACA,sBAAKA,UAAU,kCAAf,UACA,oBAAIA,UAAU,aAAd,mCACA,mBAAGA,UAAU,wBAAb,SAAsCsB,EAAKoF,6BAK3C,wBAAO1G,UAAU,4CAAjB,UACA,uBAAOA,UAAU,aAAjB,SACA,+BACA,6BACA,iDAEA,6BACC,6CAID,gCAEEmC,IAAa,SAAiBwE,IAAbxE,EAA0B,6BAAI,6BAAI,uDACnDA,EAAWf,KAAI,WAAOwF,GAAP,IAAEnF,EAAF,EAAEA,EAAEC,EAAJ,EAAIA,EAAJ,OACd,cAAC,EAAD,CAAuBD,EAAGA,EAAGC,EAAGA,GAAhBkF,oBCtEvBN,EAAU,SAACnB,GAChB,IAAO1D,EAAK0D,EAAL1D,EAAEC,EAAGyD,EAAHzD,EACT,OACa,+BACA,mCAAK,mCAAMD,EAAN,UACL,mCAAK,mCAAMC,EAAN,cA6EJwD,OAxED,SAACC,GACd,IAAO7D,EAAoB6D,EAApB7D,KAAKkE,EAAeL,EAAfK,cACNrD,EAAWb,EAAKa,WACtB,OACQ,sBAAKnC,UAAU,YAAf,UACA,oBAAIC,MAAM,SAASD,UAAU,sBAA7B,SAAoDwF,IAEpD,sBAAKxF,UAAU,MAAf,UAEC,qBAAKA,UAAU,WAAf,SACA,qBAAKA,UAAU,yBAAf,SACA,sBAAKA,UAAU,kCAAf,UACA,oBAAIA,UAAU,aAAd,iCACA,oBAAGA,UAAU,wBAAb,cAAuCsB,EAAKiF,cAK5C,qBAAKvG,UAAU,WAAf,SACA,qBAAKA,UAAU,yBAAf,SACA,sBAAKA,UAAU,kCAAf,UACA,oBAAIA,UAAU,aAAd,2BACA,mBAAGA,UAAU,wBAAb,SAAsCsB,EAAKkF,YAK3C,qBAAKxG,UAAU,WAAf,SACA,qBAAKA,UAAU,yBAAf,SACA,sBAAKA,UAAU,kCAAf,UACA,oBAAIA,UAAU,aAAd,kCACA,mBAAGA,UAAU,YAAb,SAA0BsB,EAAKmF,aAK/B,qBAAKzG,UAAU,WAAf,SACA,qBAAKA,UAAU,yBAAf,SACA,sBAAKA,UAAU,kCAAf,UACA,oBAAIA,UAAU,aAAd,mCACA,mBAAGA,UAAU,wBAAb,SAAsCsB,EAAKoF,6BAK3C,wBAAO1G,UAAU,uCAAjB,UACA,uBAAOA,UAAU,aAAjB,SACA,+BACA,6BACA,iDAEA,6BACC,6CAID,gCAEEmC,IAAa,SAAiBwE,IAAbxE,EAA0B,mCAAK,6BAAI,wDACpDA,EAAWf,KAAI,WAAOwF,GAAP,IAAEnF,EAAF,EAAEA,EAAEC,EAAJ,EAAIA,EAAJ,OACd,cAAC,EAAD,CAAuBD,EAAGA,EAAGC,EAAGA,GAAhBkF,oBCtEvBN,EAAU,SAACnB,GAChB,IAAO1D,EAAK0D,EAAL1D,EAAEC,EAAGyD,EAAHzD,EACT,OACa,+BACA,mCAAK,mCAAMD,EAAN,UACL,mCAAK,mCAAMC,EAAN,cA6EJwD,OAxEF,SAACC,GACb,IAAO7D,EAAoB6D,EAApB7D,KAAKkE,EAAeL,EAAfK,cACNrD,EAAWb,EAAKa,WACtB,OACQ,sBAAKnC,UAAU,YAAf,UACA,oBAAIC,MAAM,SAASD,UAAU,sBAA7B,SAAoDwF,IAEpD,sBAAKxF,UAAU,MAAf,UAEC,qBAAKA,UAAU,WAAf,SACA,qBAAKA,UAAU,yBAAf,SACA,sBAAKA,UAAU,kCAAf,UACA,oBAAIA,UAAU,aAAd,iCACA,oBAAGA,UAAU,wBAAb,cAAuCsB,EAAKiF,cAK5C,qBAAKvG,UAAU,WAAf,SACA,qBAAKA,UAAU,yBAAf,SACA,sBAAKA,UAAU,kCAAf,UACA,oBAAIA,UAAU,aAAd,2BACA,mBAAGA,UAAU,wBAAb,SAAsCsB,EAAKkF,YAK3C,qBAAKxG,UAAU,WAAf,SACA,qBAAKA,UAAU,yBAAf,SACA,sBAAKA,UAAU,kCAAf,UACA,oBAAIA,UAAU,aAAd,kCACA,mBAAGA,UAAU,YAAb,SAA0BsB,EAAKmF,aAK/B,qBAAKzG,UAAU,WAAf,SACA,qBAAKA,UAAU,yBAAf,SACA,sBAAKA,UAAU,kCAAf,UACA,oBAAIA,UAAU,aAAd,mCACA,mBAAGA,UAAU,wBAAb,SAAsCsB,EAAKoF,6BAK3C,wBAAO1G,UAAU,uCAAjB,UACA,uBAAOA,UAAU,aAAjB,SACA,+BACA,6BACA,iDAEA,6BACC,6CAID,gCAEEmC,IAAa,SAAiBwE,IAAbxE,EAA0B,mCAAK,6BAAI,wDACpDA,EAAWf,KAAI,WAAOwF,GAAP,IAAEnF,EAAF,EAAEA,EAAEC,EAAJ,EAAIA,EAAJ,OACd,cAAC,EAAD,CAAuBD,EAAGA,EAAGC,EAAGA,GAAhBkF,oBCtEvBN,EAAU,SAACnB,GAChB,IAAO1D,EAAK0D,EAAL1D,EAAEC,EAAGyD,EAAHzD,EACT,OACa,+BACA,mCAAK,mCAAMD,EAAN,UACL,mCAAK,mCAAMC,EAAN,cA6EJwD,OAxEF,SAACC,GACb,IAAO7D,EAAoB6D,EAApB7D,KAAKkE,EAAeL,EAAfK,cACNrD,EAAWb,EAAKa,WACtB,OACQ,sBAAKnC,UAAU,YAAf,UACA,oBAAIC,MAAM,SAASD,UAAU,sBAA7B,SAAoDwF,IAEpD,sBAAKxF,UAAU,MAAf,UAEC,qBAAKA,UAAU,WAAf,SACA,qBAAKA,UAAU,yBAAf,SACA,sBAAKA,UAAU,kCAAf,UACA,oBAAIA,UAAU,aAAd,iCACA,oBAAGA,UAAU,wBAAb,cAAuCsB,EAAKiF,cAK5C,qBAAKvG,UAAU,WAAf,SACA,qBAAKA,UAAU,yBAAf,SACA,sBAAKA,UAAU,kCAAf,UACA,oBAAIA,UAAU,aAAd,2BACA,mBAAGA,UAAU,wBAAb,SAAsCsB,EAAKkF,YAK3C,qBAAKxG,UAAU,WAAf,SACA,qBAAKA,UAAU,yBAAf,SACA,sBAAKA,UAAU,kCAAf,UACA,oBAAIA,UAAU,aAAd,kCACA,mBAAGA,UAAU,YAAb,SAA0BsB,EAAKmF,aAK/B,qBAAKzG,UAAU,WAAf,SACA,qBAAKA,UAAU,yBAAf,SACA,sBAAKA,UAAU,kCAAf,UACA,oBAAIA,UAAU,aAAd,mCACA,mBAAGA,UAAU,wBAAb,SAAsCsB,EAAKoF,6BAK3C,wBAAO1G,UAAU,uCAAjB,UACA,uBAAOA,UAAU,aAAjB,SACA,+BACA,6BACA,iDAEA,6BACC,6CAID,gCAEEmC,IAAa,SAAiBwE,IAAbxE,EAA0B,mCAAK,6BAAI,wDACpDA,EAAWf,KAAI,WAAOwF,GAAP,IAAEnF,EAAF,EAAEA,EAAEC,EAAJ,EAAIA,EAAJ,OACd,cAAC,EAAD,CAAuBD,EAAGA,EAAGC,EAAGA,GAAhBkF,oBCZdC,E,kDArDb,aAAc,IAAD,8BACX,gBAWF/G,SAAS,SAACgH,GACR,MAAiBA,EAAMC,OAAlB1G,EAAL,EAAKA,KAAKI,EAAV,EAAUA,MACV,GAAU,gBAAPJ,EAAqB,CACtB,IAAI2G,EAAM,GAEX,OADCvG,EAAMwG,MAAM,KAAK7F,KAAI,SAAA8F,GAAI,OAAGF,EAAMG,KAAKC,OAAOF,OACxC,EAAKpB,SAAS,CAACJ,YAAYsB,IAC7B,GAAU,eAAP3G,EAAoB,CAC1B,IAAIgH,EAAKD,OAAO3G,GAClB,OAAO,EAAKqF,SAAS,CAACH,WAAW0B,IAE/B,EAAKvB,SAAL,eAAgBzF,EAAMI,KAtBd,EAyBbV,aAAa,SAAC+G,GACZ,EAAKhB,SAAS,CAACwB,WAAU,KAxBzB,EAAKjC,MAAM,CACPK,YAAY,GACZC,WAAW,KACXH,cAAc,GACd1D,MAAM,GACNC,YAAY,GACZuF,WAAU,GARH,E,0CA6Bb,WACE,MAA8B7B,KAAKJ,MAA9BG,EAAL,EAAKA,cAAc8B,EAAnB,EAAmBA,UACnB,OACA,sBAAKtH,UAAU,MAAf,UACE,cAAC,EAAD,CAAMF,SAAU2F,KAAK3F,SAAUC,aAAc0F,KAAK1F,eAEhDuH,EACkB,WAAhB9B,EACA,cAAC,EAAD,eAAYC,KAAKJ,QACG,YAAhBG,EACD,cAAC,EAAD,eAAaC,KAAKJ,QACC,WAAhBG,EACC,cAAC,EAAD,eAAYC,KAAKJ,QACC,WAAhBG,EACA,cAAC,EAAD,eAAYC,KAAKJ,QACf,wDAEX,Y,GA/CQe,IAAMC,WCKTkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6e78f6a5.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Form=({onChange,handleSubmit})=>{\r\n\t\treturn(\r\n\t\t   <div className=\"container mb-3\">\r\n\t\t   <h1 align=\"center\" className=\"display-3 mt-3\"> Process Control Chart </h1>\r\n           <div className=\"row mt-3\"  style={{\"height\":\"330px\"}}>\r\n           <div className=\"col-12\">\r\n\t\t\t<div className=\"form-floating mb-3\">\r\n\t\t\t<input type=\"text\" className=\"form-control\" placeholder=\"10,12,15,20,34,36,5,8,17,10\"  name=\"sampleValue\" onChange={onChange} />\r\n\t\t\t<label htmlFor=\"floatingInput\">Email Value Of The Sample</label>\r\n\t\t\t</div>\r\n            </div>\r\n\r\n            <div className=\"col-md-6\">\r\n\t\t\t<div className=\"form-floating mb-3\">\r\n\t\t\t<input type=\"text\" className=\"form-control\"  placeholder=\"50\"  name=\"sampleSize\" onChange={onChange} />\r\n\t\t\t<label htmlFor=\"floatingInput\">Sample Size</label>\r\n\t\t\t</div>\r\n            </div>\r\n\r\n            <div className=\"col-md-6\">\r\n\t\t\t<select name=\"selectedChart\" onChange={onChange} className=\"form-select \" style={{\"height\":\"60%\"}} aria-label=\"Default select example\">\r\n\t\t\t<option defaultValue=\"Select the chart\" >Select the chart</option>\r\n\t\t\t<option value=\"pChart\">pChart</option>\r\n\t\t\t<option value=\"npChart\">npChart</option>\r\n\t\t\t<option value=\"cChart\">cChart</option>\r\n\t\t\t<option value=\"uChart\">uChart</option>\r\n\t\t\t</select>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"col-md-6 mb-3\">\r\n\t\t\t<select name=\"curve\" onChange={onChange} className=\"form-select h-75 \" aria-label=\"Default select example\">\r\n\t\t\t<option defaultValue=\"Select the chart\" >Select any curve </option>\r\n\t\t\t<option value=\"basis\">basis</option>\r\n\t\t\t<option value=\"cardinal\">cardinal</option>\r\n\t\t\t<option value=\"catmullRom\">catmullRom</option>\r\n\t\t\t<option value=\"linear\">linear</option>\r\n\t\t\t<option value=\"monotoneX\">monotoneX</option>\r\n\t\t\t<option value=\"monotoneY\">monotoneY</option>\r\n\t\t\t<option value=\"natural\">natural</option>\r\n\t\t\t<option value=\"step\">step</option>\r\n\t\t\t<option value=\"stepAfter\">stepAfter</option>\r\n\t\t\t<option value=\"stepBefore\">stepBefore</option>\r\n\t\t\t</select>\r\n\t\t\t</div>\r\n            \r\n            <div className=\"col-md-6 mb-3\">\r\n\t\t\t<select name=\"colorScheme\" onChange={onChange} className=\"form-select h-75 \" aria-label=\"Default select example\">\r\n\t\t\t<option defaultValue=\"Select the chart\" >Select any color scheme </option>\r\n\t\t\t<option value=\"nivo\">nivo</option>\r\n\t\t\t<option value=\"category10\">category10</option>\r\n\t\t\t<option value=\"accent\">accent</option>\r\n\t\t\t<option value=\"dark2\">dark2</option>\r\n\t\t\t<option value=\"paired\">paired</option>\r\n\t\t\t<option value=\"set1\">set1</option>\r\n\t\t\t<option value=\"set2\">set2</option>\r\n\t\t\t<option value=\"set3\">set3</option>\r\n\t\t\t</select>\r\n\t\t\t</div>\r\n\r\n\r\n            <div className=\"d-grid\">\r\n            <button type=\"button\" className=\"btn btn-primary\" onClick={handleSubmit}>\r\n            Submit\r\n            </button>\r\n            </div>\r\n\r\n\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t);\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\nimport { ResponsiveLine } from '@nivo/line';\r\nimport \"./example.css\";\r\n// make sure parent container have a defined height when using\r\n// responsive component, otherwise height will be 0 and\r\n// no chart will be rendered.\r\n// website examples showcase many properties,\r\n// you'll often use just a few of them.\r\nconst styleById = {\r\n    \"Upper Control Limit\": {\r\n        strokeDasharray: '12, 6',\r\n        strokeWidth: 2,\r\n    },\r\n    \"Lower Control Limit\":{\r\n        strokeDasharray: '12, 6',\r\n        strokeWidth: 2,\r\n    },\r\n    \"Control Limit\":{\r\n        strokeDasharray: '12, 6',\r\n        strokeWidth: 2,\r\n    },\r\n    default: {\r\n        strokeWidth: 1,\r\n    },\r\n}\r\nconst DashedLine = ({ series, lineGenerator, xScale, yScale }) => {\r\n    return series.map(({ id, data, color }) => (\r\n        <path\r\n            key={id}\r\n            d={lineGenerator(\r\n                data.map(d => ({\r\n                    x: xScale(d.data.x),\r\n                    y: yScale(d.data.y),\r\n                }))\r\n            )}\r\n            fill=\"none\"\r\n            stroke={color}\r\n            style={styleById[id] || styleById.default}\r\n        />\r\n    ))\r\n}\r\nconst Example = ({ data,curve,colorScheme}) =>{\r\n   return(\r\n      <div className=\"example\"> \r\n    <ResponsiveLine\r\n\r\n         data={[   \r\n                {\"id\":\"Lower Control Limit\",\"color\":\"yellow\",data:data.lclPlot},\r\n                {\"id\":\"Upper Control Limit\",\"color\":\"red\",data:data.uclPlot},\r\n                {\"id\":\"Control Limit\",\"color\":\"green\",data:data.clPlot},\r\n                {\"id\":\"Sample fraction nonconforming\",\"color\":\"orange\",data:data.sampleData}\r\n               ]}\r\n        margin={{ top: 50, right: 110, bottom: 50, left: 60 }}\r\n        xScale={{ type: 'point', min: 0, max: 'auto' }}\r\n        yScale={{ type: 'linear', min: 'auto', max: 'auto', stacked: false, reverse: false }}\r\n        yFormat=\">-.2f\"\r\n        curve={curve}\r\n        axisBottom={{\r\n            orient: 'bottom',\r\n            tickSize: 5,\r\n            tickPadding: 5,\r\n            tickRotation: 0,\r\n            legend: 'Sample Number',\r\n            legendOffset: 38,\r\n            legendPosition: 'middle'\r\n        }}\r\n        axisLeft={{\r\n            orient: 'left',\r\n            tickSize: 5,\r\n            tickPadding: 5,\r\n            tickRotation: 0,\r\n            legend: 'Sample fraction nonconforming',\r\n            legendOffset: -45,\r\n            legendPosition: 'middle'\r\n        }}\r\n        colors={{\"scheme\":colorScheme}}\r\n        pointSize={4}\r\n        pointColor={{ theme: 'background' }}\r\n        pointBorderWidth={2}\r\n        pointBorderColor={{ from: 'serieColor' }}\r\n        pointLabelYOffset={-12}\r\n        useMesh={true}\r\n        layers={['grid', 'markers', 'axes',DashedLine ,'areas' ,'crosshair', 'points', 'slices', 'mesh', 'legends']}\r\n        legends={[\r\n            {\r\n                anchor: 'top',\r\n                direction: 'row',\r\n                justify: false,\r\n                translateX: 0,\r\n                translateY: -40,\r\n                itemsSpacing: 160,\r\n                itemDirection: 'left-to-right',\r\n                itemWidth: 100,\r\n                itemHeight: 20,\r\n                itemOpacity: 0.75,\r\n                symbolSize: 25,\r\n                symbolShape: 'circle',\r\n                symbolBorderColor: 'rgba(0, 0, 0, .5)',\r\n                effects: [\r\n                    {\r\n                        on: 'hover',\r\n                        style: {\r\n                            itemBackground: 'rgba(0, 0, 0, .03)',\r\n                            itemOpacity: 1\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n        ]}\r\n    \r\n        \r\n    />\r\n\r\n    </div>\r\n);\r\n}\r\nexport default Example;","import React from \"react\";\r\nimport Example from '../example/example';\r\nimport {pChart,npChart,cChart,uChart} from \"process-control-charts-es6\";\r\n\r\nconst withComponent=(props)=>(WrappedComponent)=>{\r\n  return class chartExample extends React.Component {\r\n    constructor(props){\r\n      super(props);\r\n      this.state={\r\n        data:{}\r\n      }\r\n    }\r\n    componentDidUpdate(prevProps,prevState){\r\n      if(prevProps.selectedChart===this.props.selectedChart ||prevProps.sampleValue===this.props.sampleValue||prevProps.sampleSize===this.props.sampleSize||prevProps.curve===this.props.curve){\r\n        return null;\r\n      }else{\r\n        const {sampleSize,sampleValue,selectedChart}=this.props;\r\n        let dataDetails;\r\n        if(selectedChart===\"pChart\"){\r\n          dataDetails= pChart(sampleValue,sampleSize);\r\n          return this.setState({data:dataDetails}) \r\n        }else if(selectedChart===\"npChart\"){\r\n          dataDetails= npChart(sampleValue,sampleSize);\r\n          return this.setState({data:dataDetails}) \r\n        }else if(selectedChart===\"cChart\"){\r\n          dataDetails= cChart(sampleValue);\r\n          return this.setState({data:dataDetails}) \r\n        }else if(selectedChart===\"uChart\"){\r\n          dataDetails= uChart(sampleValue,sampleSize);\r\n          console.log(dataDetails)\r\n          return this.setState({data:dataDetails}) \r\n        }else{\r\n          return null;\r\n        }\r\n      }\r\n    }\r\n\r\n    componentDidMount(){\r\n      const {sampleSize,sampleValue,selectedChart}=this.props;\r\n      let dataDetails;\r\n      if(selectedChart===\"pChart\"){\r\n        dataDetails= pChart(sampleValue,sampleSize);\r\n        return this.setState({data:dataDetails}) \r\n      }else if(selectedChart===\"npChart\"){\r\n        dataDetails= npChart(sampleValue,sampleSize);\r\n        return this.setState({data:dataDetails}) \r\n      }else if(selectedChart===\"cChart\"){\r\n        dataDetails= cChart(sampleValue);\r\n        return this.setState({data:dataDetails}) \r\n      }else{\r\n        dataDetails= uChart(sampleValue,sampleSize);\r\n        return this.setState({data:dataDetails}) \r\n      }\r\n    }\r\n \r\n  render() {\r\n    const {curve,colorScheme}=this.props;\r\n    return(\r\n      <div>\r\n      <Example data={this.state.data} curve={curve} colorScheme={colorScheme} />\r\n      <WrappedComponent data={this.state.data} {...this.props} />\r\n      </div>\r\n      );\r\n    } \r\n  }\r\n}\r\nexport default withComponent;\r\n","import React from \"react\";\r\nimport withComponent from \"../hoc/hoc\";\r\n\r\nconst TableData=(props)=>{\r\n\tconst {x,y}=props;\r\n\treturn(\r\n              <tr>\r\n              <td> <h5> {x} </h5></td>\r\n              <td> <h5> {y} </h5></td>\r\n              </tr>\r\n\t   );\r\n}\r\n\r\nconst PChart=(props)=>{\r\n\tconst {data,selectedChart}=props;\r\n\tconst sampleData=data.sampleData;\r\n\treturn(\r\n         <div className=\"container\">\r\n         <h1 align=\"center\" className=\"display-4 mt-3 mb-5\">{selectedChart}</h1>\r\n\r\n         <div className=\"row\" style={{\"height\":\"100px\"}} >\r\n\r\n          <div className=\"col-md-3 h-100\">\r\n          <div className=\"card border-dark mb-3 \" >\r\n          <div className=\"card-body text-dark text-center \">\r\n          <h5 className=\"card-title\">Upper Control Limit</h5>\r\n          <p className=\"card-text text-center\"> {data.ucl}</p>\r\n          </div>\r\n          </div>\r\n          </div>\r\n\r\n          <div className=\"col-md-3 h-100\">\r\n          <div className=\"card border-dark mb-3\" >\r\n          <div className=\"card-body text-dark text-center\">\r\n          <h5 className=\"card-title\">Control Limit</h5>\r\n          <p className=\"card-text text-center\">{data.cl}</p>\r\n          </div>\r\n          </div>\r\n          </div>\r\n\r\n          <div className=\"col-md-3 h-100\">\r\n          <div className=\"card border-dark mb-3 \" >\r\n          <div className=\"card-body text-dark text-center\">\r\n          <h5 className=\"card-title\">Lower Control Limit </h5>\r\n          <p className=\"card-text\">{data.lcl}</p>\r\n          </div>    \r\n          </div>\r\n          </div>\r\n\r\n          <div className=\"col-md-3 h-100\">\r\n          <div className=\"card border-dark mb-3 \" >\r\n          <div className=\"card-body text-dark text-center\">\r\n          <h5 className=\"card-title\">Sample Out Of Control</h5>\r\n          <p className=\"card-text text-center\">{data.samplesOutOfControl}</p>\r\n          </div>\r\n          </div>  \r\n          </div>        \r\n          \r\n          <table className=\"table table-striped table-hover mt-3 mb-3\">\r\n          <thead className=\"table-dark\">\r\n          <tr>\r\n          <th>\r\n          <h5>Sample Number</h5>\r\n          </th>\r\n          <th>\r\n           <h5> Pi </h5>\r\n          </th>\r\n          </tr>\r\n          </thead>\r\n          <tbody>\r\n          {\r\n          \t(sampleData===[]||sampleData===undefined) ? <tr><td><h4> No Data Present </h4></td></tr> :\r\n          \t sampleData.map(({x,y},index)=>(\r\n             <TableData key={index} x={x} y={y} />\r\n          \t \t))       \r\n          }\r\n          </tbody>\r\n          </table>\r\n                \r\n\r\n          </div>\r\n         </div>\r\n\t\t);\r\n}\r\n\r\nexport default withComponent()(PChart);","import React from \"react\";\r\nimport withComponent from \"../hoc/hoc\";\r\n\r\nconst TableData=(props)=>{\r\n\tconst {x,y}=props;\r\n\treturn(\r\n              <tr>\r\n              <td> <h5> {x} </h5></td>\r\n              <td> <h5> {y} </h5></td>\r\n              </tr>\r\n\t   );\r\n}\r\n\r\nconst NpChart=(props)=>{\r\n\tconst {data,selectedChart}=props;\r\n\tconst sampleData=data.sampleData;\r\n\treturn(\r\n         <div className=\"container\">\r\n         <h1 align=\"center\" className=\"display-4 mt-3 mb-5\">{selectedChart}</h1>\r\n\r\n         <div className=\"row\">\r\n\r\n          <div className=\"col-md-3\">\r\n          <div className=\"card border-dark mb-3 \" >\r\n          <div className=\"card-body text-dark text-center\">\r\n          <h5 className=\"card-title\">Upper Control Limit</h5>\r\n          <p className=\"card-text text-center\"> {data.ucl}</p>\r\n          </div>\r\n          </div>\r\n          </div>\r\n\r\n          <div className=\"col-md-3\">\r\n          <div className=\"card border-dark mb-3 \" >\r\n          <div className=\"card-body text-dark text-center\">\r\n          <h5 className=\"card-title\">Control Limit</h5>\r\n          <p className=\"card-text text-center\">{data.cl}</p>\r\n          </div>\r\n          </div>\r\n          </div>\r\n\r\n          <div className=\"col-md-3\">\r\n          <div className=\"card border-dark mb-3 \" >\r\n          <div className=\"card-body text-dark text-center\">\r\n          <h5 className=\"card-title\">Lower Control Limit </h5>\r\n          <p className=\"card-text\">{data.lcl}</p>\r\n          </div>    \r\n          </div>\r\n          </div>\r\n\r\n          <div className=\"col-md-3\">\r\n          <div className=\"card border-dark mb-3 \" >\r\n          <div className=\"card-body text-dark text-center\">\r\n          <h5 className=\"card-title\">Sample Out Of Control</h5>\r\n          <p className=\"card-text text-center\">{data.samplesOutOfControl}</p>\r\n          </div>\r\n          </div>  \r\n          </div>        \r\n          \r\n          <table className=\"table table-striped table-hover mt-3\">\r\n          <thead className=\"table-dark\">\r\n          <tr>\r\n          <th>\r\n          <h5>Sample Number</h5>\r\n          </th>\r\n          <th>\r\n           <h5> Pi </h5>\r\n          </th>\r\n          </tr>\r\n          </thead>\r\n          <tbody>\r\n          {\r\n          \t(sampleData===[]||sampleData===undefined) ? <tr> <td><h4> No Data Present </h4></td></tr> :\r\n          \t sampleData.map(({x,y},index)=>(\r\n             <TableData key={index} x={x} y={y} />\r\n          \t \t))       \r\n          }\r\n          </tbody>\r\n          </table>\r\n                \r\n\r\n          </div>\r\n         </div>\r\n\t\t);\r\n}\r\n\r\nexport default withComponent()(NpChart);","import React from \"react\";\r\nimport withComponent from \"../hoc/hoc\";\r\n\r\nconst TableData=(props)=>{\r\n\tconst {x,y}=props;\r\n\treturn(\r\n              <tr>\r\n              <td> <h5> {x} </h5></td>\r\n              <td> <h5> {y} </h5></td>\r\n              </tr>\r\n\t   );\r\n}\r\n\r\nconst CChart=(props)=>{\r\n\tconst {data,selectedChart}=props;\r\n\tconst sampleData=data.sampleData;\r\n\treturn(\r\n         <div className=\"container\">\r\n         <h1 align=\"center\" className=\"display-4 mt-3 mb-5\">{selectedChart}</h1>\r\n\r\n         <div className=\"row\">\r\n\r\n          <div className=\"col-md-3\">\r\n          <div className=\"card border-dark mb-3 \" >\r\n          <div className=\"card-body text-dark text-center\">\r\n          <h5 className=\"card-title\">Upper Control Limit</h5>\r\n          <p className=\"card-text text-center\"> {data.ucl}</p>\r\n          </div>\r\n          </div>\r\n          </div>\r\n\r\n          <div className=\"col-md-3\">\r\n          <div className=\"card border-dark mb-3 \" >\r\n          <div className=\"card-body text-dark text-center\">\r\n          <h5 className=\"card-title\">Control Limit</h5>\r\n          <p className=\"card-text text-center\">{data.cl}</p>\r\n          </div>\r\n          </div>\r\n          </div>\r\n\r\n          <div className=\"col-md-3\">\r\n          <div className=\"card border-dark mb-3 \" >\r\n          <div className=\"card-body text-dark text-center\">\r\n          <h5 className=\"card-title\">Lower Control Limit </h5>\r\n          <p className=\"card-text\">{data.lcl}</p>\r\n          </div>    \r\n          </div>\r\n          </div>\r\n\r\n          <div className=\"col-md-3\">\r\n          <div className=\"card border-dark mb-3 \" >\r\n          <div className=\"card-body text-dark text-center\">\r\n          <h5 className=\"card-title\">Sample Out Of Control</h5>\r\n          <p className=\"card-text text-center\">{data.samplesOutOfControl}</p>\r\n          </div>\r\n          </div>  \r\n          </div>        \r\n          \r\n          <table className=\"table table-striped table-hover mt-3\">\r\n          <thead className=\"table-dark\">\r\n          <tr>\r\n          <th>\r\n          <h5>Sample Number</h5>\r\n          </th>\r\n          <th>\r\n           <h5> Pi </h5>\r\n          </th>\r\n          </tr>\r\n          </thead>\r\n          <tbody>\r\n          {\r\n          \t(sampleData===[]||sampleData===undefined) ? <tr> <td><h4> No Data Present </h4></td></tr> :\r\n          \t sampleData.map(({x,y},index)=>(\r\n             <TableData key={index} x={x} y={y} />\r\n          \t \t))       \r\n          }\r\n          </tbody>\r\n          </table>\r\n                \r\n\r\n          </div>\r\n         </div>\r\n\t\t);\r\n}\r\n\r\nexport default withComponent()(CChart);","import React from \"react\";\r\nimport withComponent from \"../hoc/hoc\";\r\n\r\nconst TableData=(props)=>{\r\n\tconst {x,y}=props;\r\n\treturn(\r\n              <tr>\r\n              <td> <h5> {x} </h5></td>\r\n              <td> <h5> {y} </h5></td>\r\n              </tr>\r\n\t   );\r\n}\r\n\r\nconst UChart=(props)=>{\r\n\tconst {data,selectedChart}=props;\r\n\tconst sampleData=data.sampleData;\r\n\treturn(\r\n         <div className=\"container\">\r\n         <h1 align=\"center\" className=\"display-4 mt-3 mb-5\">{selectedChart}</h1>\r\n\r\n         <div className=\"row\">\r\n\r\n          <div className=\"col-md-3\">\r\n          <div className=\"card border-dark mb-3 \" >\r\n          <div className=\"card-body text-dark text-center\">\r\n          <h5 className=\"card-title\">Upper Control Limit</h5>\r\n          <p className=\"card-text text-center\"> {data.ucl}</p>\r\n          </div>\r\n          </div>\r\n          </div>\r\n\r\n          <div className=\"col-md-3\">\r\n          <div className=\"card border-dark mb-3 \" >\r\n          <div className=\"card-body text-dark text-center\">\r\n          <h5 className=\"card-title\">Control Limit</h5>\r\n          <p className=\"card-text text-center\">{data.cl}</p>\r\n          </div>\r\n          </div>\r\n          </div>\r\n\r\n          <div className=\"col-md-3\">\r\n          <div className=\"card border-dark mb-3 \" >\r\n          <div className=\"card-body text-dark text-center\">\r\n          <h5 className=\"card-title\">Lower Control Limit </h5>\r\n          <p className=\"card-text\">{data.lcl}</p>\r\n          </div>    \r\n          </div>\r\n          </div>\r\n\r\n          <div className=\"col-md-3\">\r\n          <div className=\"card border-dark mb-3 \" >\r\n          <div className=\"card-body text-dark text-center\">\r\n          <h5 className=\"card-title\">Sample Out Of Control</h5>\r\n          <p className=\"card-text text-center\">{data.samplesOutOfControl}</p>\r\n          </div>\r\n          </div>  \r\n          </div>        \r\n          \r\n          <table className=\"table table-striped table-hover mt-3\">\r\n          <thead className=\"table-dark\">\r\n          <tr>\r\n          <th>\r\n          <h5>Sample Number</h5>\r\n          </th>\r\n          <th>\r\n           <h5> Pi </h5>\r\n          </th>\r\n          </tr>\r\n          </thead>\r\n          <tbody>\r\n          {\r\n          \t(sampleData===[]||sampleData===undefined) ? <tr> <td><h4> No Data Present </h4></td></tr> :\r\n          \t sampleData.map(({x,y},index)=>(\r\n             <TableData key={index} x={x} y={y} />\r\n          \t \t))       \r\n          }\r\n          </tbody>\r\n          </table>\r\n                \r\n\r\n          </div>\r\n         </div>\r\n\t\t);\r\n}\r\n\r\nexport default withComponent()(UChart);","import React from \"react\";\nimport Form from './components/form/form';\nimport PChart from './components/pchart/pchart';\nimport NpChart from './components/npchart/npchart';\nimport CChart from './components/cchart/cchart';\nimport UChart from './components/uchart/uchart';\n\nclass App extends React.Component{\n  constructor(){\n    super();\n    this.state={\n        sampleValue:[],\n        sampleSize:null,\n        selectedChart:'',\n        curve:\"\",\n        colorScheme:\"\",\n        showChart:false\n    }\n  }\n\n  onChange=(event)=>{\n    let {name,value}=event.target;\n    if(name===\"sampleValue\"){\n      let array=[];\n      value.split(\",\").map(item=> array.push(Number(item)));\n     return this.setState({sampleValue:array});\n    }else if(name===\"sampleSize\"){\n       let size=Number(value);\n     return this.setState({sampleSize:size});\n    }\n       this.setState({[name]:value});\n  }\n\n  handleSubmit=(event)=>{\n    this.setState({showChart:true})\n  }\n\n  render(){\n    let {selectedChart,showChart}=this.state;\n    return (\n    <div className=\"App\">\n      <Form onChange={this.onChange} handleSubmit={this.handleSubmit}/>\n      {\n       (showChart)?\n         (selectedChart===\"pChart\")?\n          <PChart {...this.state} />:\n             (selectedChart===\"npChart\")?\n             <NpChart {...this.state} />:\n               (selectedChart===\"cChart\")?\n                 <CChart {...this.state} />:\n                  (selectedChart===\"uChart\")?\n                   <UChart {...this.state} />:\n                     <h1> No Chart is selected </h1>\n          :\n          null\n      }  \n    </div>\n  );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals'; \nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}